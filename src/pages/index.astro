---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Welcome to Astro.">
	<main>
		<canvas id="pixelCanvas"></canvas>
		<div id="tools">
			<input type="color" id="colorPicker" value="#000000" />
		</div>
	</main>
</Layout>

<script>
	// Get the canvas element and its context
	const canvas = document.getElementById("pixelCanvas");
	const ctx = canvas.getContext("2d");

	// Calculate the size of each cell (pixel)
	const cellSize = 10; // Adjust the cell size as needed
	const rows = Math.floor(window.innerHeight / cellSize);
	const cols = Math.floor(window.innerWidth / cellSize);

	canvas.width = cols * cellSize;
	canvas.height = rows * cellSize;

	// Variable to hold mouse state
	let isDrawing = false;

	const colorPicker = document.getElementById("colorPicker");

	canvas.addEventListener("mousemove", function (event) {
		if (isDrawing) {
			const x = Math.floor(event.offsetX / cellSize) * cellSize;
			const y = Math.floor(event.offsetY / cellSize) * cellSize;
			drawPixel(x, y);
		}
	});

	// Event listener to start drawing
	canvas.addEventListener("mousedown", function (event) {
		isDrawing = true;
		const x = Math.floor(event.offsetX / cellSize) * cellSize;
		const y = Math.floor(event.offsetY / cellSize) * cellSize;
		drawPixel(x, y);
	});

	// Event listener to stop drawing
	canvas.addEventListener("mouseup", function () {
		isDrawing = false;
	});

	// Function to draw a pixel at grid coordinates (x, y)
	function drawPixel(x, y) {
		ctx.fillStyle = colorPicker.value; // Use the selected color
		ctx.fillRect(x, y, cellSize, cellSize);
	}
</script>

<style>
	body {
		display: flex;
		justify-content: center;
		align-items: center;
		height: 100vh;
		margin: 0;
		background-color: #f0f0f0; /* Light gray background */
		font-family: Arial, sans-serif;
	}
	main {
		position: relative;
		display: flex;
		justify-content: center;
		align-items: center;
		height: 100%;
	}
	#pixelCanvas {
		border: 2px solid #999; /* Darker border for the canvas */
		cursor: crosshair;
		background-color: #fff; /* White canvas background */
	}
	#tools {
		position: absolute;
		top: 20px;
		left: 20px;
		padding: 10px;
		background-color: rgba(
			255,
			255,
			255,
			0.8
		); /* Semi-transparent white background */
		border-radius: 6px;
		box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Soft shadow */
	}
	#colorPicker {
		padding: 5px;
		border: none;
		border-radius: 4px;
		box-shadow: 0 0 3px rgba(0, 0, 0, 0.3);
	}
</style>
